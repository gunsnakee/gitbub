
package com.meiliwan.emall.base.util.dmdelivery;

import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import java.net.MalformedURLException;
import java.net.URL;
import java.util.logging.Logger;


/**
 * 
 * 	This is the DMdelivery SOAP webservice.
 * 
 * 	In order to be able to use this webservice, you need to have a login for DMdelivery. A login consists of a username and a password. Each SOAP call in the webservice needs this username and password for access! Please inquire with the DMdelivery administrator for a login.
 * 	
 * 
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.1.6 in JDK 6
 * Generated source version: 2.1
 * 
 */
@WebServiceClient(name = "DMdeliverySoapAPI", targetNamespace = "http://dmdelivery.com/webservice/", wsdlLocation = "http://meiliwan.dmdelivery.com/x/soap-v4/wsdl.php")
public class DMdeliverySoapAPI
    extends Service
{

    private final static URL DMDELIVERYSOAPAPI_WSDL_LOCATION;
    private final static Logger logger = Logger.getLogger(DMdeliverySoapAPI.class.getName());

    static {
        URL url = null;
        try {
            URL baseUrl;
            baseUrl = DMdeliverySoapAPI.class.getResource(".");
            url = new URL(baseUrl, "http://meiliwan.dmdelivery.com/x/soap-v4/wsdl.php");
        } catch (MalformedURLException e) {
            logger.warning("Failed to create URL for the wsdl Location: 'http://meiliwan.dmdelivery.com/x/soap-v4/wsdl.php', retrying as a local file");
            logger.warning(e.getMessage());
        }
        DMDELIVERYSOAPAPI_WSDL_LOCATION = url;
    }

    public DMdeliverySoapAPI(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public DMdeliverySoapAPI() {
        super(DMDELIVERYSOAPAPI_WSDL_LOCATION, new QName("http://dmdelivery.com/webservice/", "DMdeliverySoapAPI"));
    }

    /**
     * 
     * @return
     *     returns DMdeliverySoapAPIPort
     */
    @WebEndpoint(name = "DMdeliverySoapAPIPort")
    public DMdeliverySoapAPIPort getDMdeliverySoapAPIPort() {
        return super.getPort(new QName("http://dmdelivery.com/webservice/", "DMdeliverySoapAPIPort"), DMdeliverySoapAPIPort.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns DMdeliverySoapAPIPort
     */
    @WebEndpoint(name = "DMdeliverySoapAPIPort")
    public DMdeliverySoapAPIPort getDMdeliverySoapAPIPort(WebServiceFeature... features) {
        return super.getPort(new QName("http://dmdelivery.com/webservice/", "DMdeliverySoapAPIPort"), DMdeliverySoapAPIPort.class, features);
    }

}
