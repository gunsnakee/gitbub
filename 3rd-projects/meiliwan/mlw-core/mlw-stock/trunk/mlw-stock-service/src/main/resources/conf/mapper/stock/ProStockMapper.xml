<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.meiliwan.emall.stock.dao.ProStockDao" >
  <resultMap id="BaseResultMap" type="com.meiliwan.emall.stock.bean.ProStock" >
    <id column="pro_id" property="proId" jdbcType="INTEGER" />
    <result column="stock" property="stock" jdbcType="INTEGER" />
    <result column="sell_stock" property="sellStock" jdbcType="INTEGER" />
    <result column="unsell_stock" property="unsellStock" jdbcType="INTEGER" />
    <result column="order_stock" property="orderStock" jdbcType="INTEGER" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
      <result column="safe_stock" property="safeStock" jdbcType="INTEGER" />
  </resultMap>

    <resultMap id="SafeStockItem" type="com.meiliwan.emall.stock.bean.SafeStockItem" >
        <id column="pro_id" property="proId" jdbcType="INTEGER" />
        <result column="pro_name" property="proName" jdbcType="VARCHAR"/>
        <result column="bar_code" property="barCode" jdbcType="VARCHAR"/>
        <result column="mlw_price" property="mlwPrice" jdbcType="DECIMAL"/>
        <result column="sell_stock" property="sellStock" jdbcType="INTEGER" />
        <result column="safe_stock" property="safeStock" jdbcType="INTEGER" />
        <result column="store_name" property="storeName" jdbcType="VARCHAR" />
    </resultMap>
  <sql id="Base_Column_List" >
    pro_id, stock, sell_stock, unsell_stock, order_stock, update_time, safe_stock
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from pro_stock
    where pro_id = #{proId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from pro_stock
    where pro_id = #{proId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.meiliwan.emall.stock.bean.ProStock" useGeneratedKeys="true" keyProperty="proId">
    insert into pro_stock (pro_id, stock, sell_stock, unsell_stock, order_stock, update_time, safe_stock
      )
    values (#{proId,jdbcType=INTEGER}, #{stock,jdbcType=INTEGER}, #{sellStock,jdbcType=INTEGER},
            #{unsellStock,jdbcType=INTEGER}, #{orderStock,jdbcType=INTEGER}, #{updateTime,jdbcType=TIMESTAMP},#{safeStock,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.meiliwan.emall.stock.bean.ProStock" useGeneratedKeys="true" keyProperty="proId">
    insert into pro_stock
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="proId != null" >
        pro_id,
      </if>
      <if test="stock != null" >
        stock,
      </if>
        <if test="sellStock != null" >
            sell_stock,
        </if>
        <if test="unsellStock != null" >
            unsell_stock,
        </if>
        <if test="orderStock != null" >
            order_stock,
        </if>
      <if test="updateTime != null" >
        update_time,
      </if>
        <if test="safeStock != null" >
            safe_stock,
        </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="proId != null" >
        #{proId,jdbcType=INTEGER},
      </if>
      <if test="stock != null" >
        #{stock,jdbcType=INTEGER},
      </if>
        <if test="sellStock != null" >
            #{sellStock,jdbcType=INTEGER},
        </if>
        <if test="unsellStock != null" >
            #{unsellStock,jdbcType=INTEGER},
        </if>
        <if test="orderStock != null" >
            #{orderStock,jdbcType=INTEGER},
        </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
        <if test="safeStock != null" >
            #{safeStock,jdbcType=INTEGER},
        </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.meiliwan.emall.stock.bean.ProStock" >
    update pro_stock
    <set >
      <if test="stock != null" >
        stock = #{stock,jdbcType=INTEGER},
      </if>
        <if test="sellStock != null" >
           sell_stock = #{sellStock,jdbcType=INTEGER},
        </if>
        <if test="unsellStock != null" >
            unsell_stock = #{unsellStock,jdbcType=INTEGER},
        </if>
        <if test="orderStock != null" >
            order_stock = #{orderStock,jdbcType=INTEGER},
        </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
        <if test="safeStock != null" >
           safe_stock = #{safeStock,jdbcType=INTEGER},
        </if>
    </set>
    where pro_id = #{proId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.meiliwan.emall.stock.bean.ProStock" >
    update pro_stock
    set stock = #{stock,jdbcType=INTEGER},
        sell_stock = #{sellStock,jdbcType=INTEGER},
        unsell_stock = #{unsellStock,jdbcType=INTEGER},
        order_stock = #{orderStock,jdbcType=INTEGER},
        update_time = #{updateTime,jdbcType=TIMESTAMP},
        safe_stock = #{safeStock,jdbcType=INTEGER}
    where pro_id = #{proId,jdbcType=INTEGER}
  </update>

    <!-- 下边是需要手动配置 自定义 查询条件 -->
    <sql id="selectCondition">
        <where>
            <trim suffixOverrides="and">
                <if test="entity != null">
                    <if test="entity.proId!=null and entity.proId &gt;0">
                        and pro_id=#{entity.proId,jdbcType=INTEGER}
                    </if>
                </if>
            </trim>
            <trim suffixOverrides="and">
                <if test="whereSql!=null">
                    and ${whereSql}
                </if>
            </trim>
        </where>
    </sql>

    <!-- 根据条件查询 -->
    <select id="getListByEntityAndPageInfo" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from pro_stock
        <include refid="selectCondition"/>
        <if test="orderBy!=null">
            ${orderBy}
        </if>
        <if test="pageInfo!=null">
            limit ${pageInfo.startIndex} ,${pageInfo.pagesize}
        </if>
    </select>

    <!-- 查询总数 -->
    <select id="getTotalByEntity"
            resultType="java.lang.Integer">
        select count(*) from pro_stock
        <include refid="selectCondition"/>
    </select>

    <!--减少对应产品的库存，管理员减少操作-->
    <update id="subStock" parameterType="java.lang.Integer">
        update pro_stock
        set stock = stock - ${num},sell_stock = sell_stock - ${num},update_time = #{updateTime,jdbcType=VARCHAR}
        where pro_id = ${id}
    </update>

    <!--减少对应产品的库存,通过下订单操作-->
    <update id="subStockByOrder" parameterType="java.lang.Integer">
        update pro_stock
        set sell_stock = sell_stock - ${num},order_stock = order_stock + ${num},update_time = #{updateTime,jdbcType=VARCHAR}
        where pro_id = ${id}
    </update>

    <!--减少对应产品的库存,管理员点击发货情况(货到付款)-->
    <update id="subStockByAdminSend" parameterType="java.lang.Integer">
        update pro_stock
        set stock = stock - ${num},order_stock = order_stock - ${num},update_time = #{updateTime,jdbcType=VARCHAR}
        where pro_id = ${id}
    </update>

    <!--增加对应产品的库存,通过下订单操作-->
    <update id="addStockByOrderCancel" parameterType="java.lang.Integer">
        update pro_stock
        set sell_stock = sell_stock + ${num},order_stock = order_stock - ${num},update_time = #{updateTime,jdbcType=VARCHAR}
        where pro_id = ${id}
    </update>

    <!--增加对应产品的库存,管理员增加库存-->
    <update id="addStock" parameterType="java.lang.Integer">
        update pro_stock
        set stock = stock + ${num},sell_stock = sell_stock + ${num},update_time = #{updateTime,jdbcType=VARCHAR}
        where pro_id = ${id}
    </update>

    <!--增加不可销售的库存-->
    <update id="addUnsellStock" parameterType="java.lang.Integer">
        update pro_stock
        set unsell_stock = unsell_stock + ${num},sell_stock = sell_stock - ${num},update_time = #{updateTime,jdbcType=VARCHAR}
        where pro_id = ${id}
    </update>

    <!--修改安全库存-->
    <update id="updateSafeStock" parameterType="java.lang.Integer">
        update pro_stock
        set safe_stock = ${num},update_time = #{updateTime,jdbcType=VARCHAR}
        where pro_id = ${id}
    </update>

    <!-- 通过商品ids，获取销售库存列表 -->
    <select id="getSellStockByIds">
        select pro_id,sell_stock
        from pro_stock
        where pro_id in
        <foreach item="item" collection="ids"
                 open="(" separator="," close=")">
            #{item}
        </foreach>
    </select>

    <!-- 通过商品ids，获取库存列表 -->
    <select id="getListByIds" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from pro_stock
        where pro_id in
        <foreach item="item" collection="ids"
                 open="(" separator="," close=")">
            #{item}
        </foreach>
    </select>
    <select id="getSafeStockList" resultMap="SafeStockItem">
        select s.pro_id,p.bar_code,p.pro_name,p.mlw_price,s.sell_stock,s.safe_stock, ps.store_name
        from pro_stock s left join pro_product p on s.pro_id = p.pro_id left join pro_store_prod ps on p.spu_id = ps.spu_id
        where s.sell_stock &lt;= s.safe_stock and p.state = 1
    </select>

    <!-- 根据商品条形码码获取商品ID -->
    <select id="getProIdByBarCode" resultMap="SafeStockItem">
        select pro_id
        from pro_product
        where bar_code = #{id,jdbcType=VARCHAR}
    </select>
</mapper>