<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.meiliwan.emall.mms.dao.UserPassportDao">
	<resultMap id="BaseResultMap" type="com.meiliwan.emall.mms.bean.UserPassport">
		<id column="uid" property="uid" jdbcType="INTEGER" />
		<result column="user_name" property="userName" jdbcType="VARCHAR" />
		<result column="nick_name" property="nickName" jdbcType="VARCHAR" />
		<result column="email" property="email" jdbcType="VARCHAR" />
		<result column="mobile" property="mobile" jdbcType="VARCHAR" />
		<result column="password" property="password" jdbcType="VARCHAR" />
		<result column="head_uri" property="headUri" jdbcType="VARCHAR" />
		<result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
		<result column="email_active" property="emailActive" jdbcType="TINYINT" />
		<result column="mobile_active" property="mobileActive" jdbcType="TINYINT" />
		<result column="login_time" property="loginTime" jdbcType="TIMESTAMP" />
		<result column="login_equip" property="loginEquip" jdbcType="VARCHAR" />
		<result column="login_ip" property="loginIp" jdbcType="VARCHAR" />
		<result column="login_equip_id" property="loginEquipId"	jdbcType="VARCHAR" />
		<result column="state" property="state" jdbcType="TINYINT" />
        <result column="user_level" property="userLevel" jdbcType="TINYINT" />
	</resultMap>
	<sql id="Base_Column_List">
		uid, user_name, nick_name, email, mobile, password, head_uri, create_time,
		email_active,
		mobile_active, login_time, login_equip, login_ip, login_equip_id, state,user_level
	</sql>
    <resultMap id="simpleResultMap" type="com.meiliwan.emall.mms.bean.UserPassportSimple">
        <id column="uid" property="uid" jdbcType="INTEGER" />
        <result column="user_name" property="userName" jdbcType="VARCHAR" />
        <result column="nick_name" property="nickName" jdbcType="VARCHAR" />
        <result column="email" property="email" jdbcType="VARCHAR" />
        <result column="mobile" property="mobile" jdbcType="VARCHAR" />
        <result column="state" property="state" jdbcType="TINYINT" />
    </resultMap>
    <sql id="Simple_Column_List">
		uid, user_name, nick_name, email, mobile, state
	</sql>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		from user_passport
		where uid = #{uid,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from user_passport
		where uid = #{uid,jdbcType=INTEGER}
	</delete>
	<insert id="insert" parameterType="com.meiliwan.emall.mms.bean.UserPassport">
		insert into user_passport (uid, user_name, nick_name,
		email, mobile, password,
		head_uri, create_time, email_active,
		mobile_active, login_time, login_equip,
		login_ip, login_equip_id, state,user_level
		)
		values (#{uid,jdbcType=INTEGER}, #{userName,jdbcType=VARCHAR},
		#{nickName,jdbcType=VARCHAR},
		#{email,jdbcType=VARCHAR}, #{mobile,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR},
		#{headUri,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP},
		#{emailActive,jdbcType=TINYINT},
		#{mobileActive,jdbcType=TINYINT}, #{loginTime,jdbcType=TIMESTAMP}, #{loginEquip,jdbcType=VARCHAR},
		#{loginIp,jdbcType=VARCHAR}, #{loginEquipId,jdbcType=VARCHAR},
		#{state,jdbcType=TINYINT},#{userLevel,jdbcType=TINYINT}
		)
	</insert>
	<insert id="insertSelective" parameterType="com.meiliwan.emall.mms.bean.UserPassport">
		insert into user_passport
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="uid != null">
				uid,
			</if>
			<if test="userName != null">
				user_name,
			</if>
			<if test="nickName != null">
				nick_name,
			</if>
			<if test="email != null">
				email,
			</if>
			<if test="mobile != null">
				mobile,
			</if>
			<if test="password != null">
				password,
			</if>
			<if test="headUri != null">
				head_uri,
			</if>
			<if test="createTime != null">
				create_time,
			</if>
			<if test="emailActive != null">
				email_active,
			</if>
			<if test="mobileActive != null">
				mobile_active,
			</if>
			<if test="loginTime != null">
				login_time,
			</if>
			<if test="loginEquip != null">
				login_equip,
			</if>
			<if test="loginIp != null">
				login_ip,
			</if>
			<if test="loginEquipId != null">
				login_equip_id,
			</if>
			<if test="state != null">
				state,
			</if>
            <if test="userLevel != null">
                user_level,
            </if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="uid != null">
				#{uid,jdbcType=INTEGER},
			</if>
			<if test="userName != null">
				#{userName,jdbcType=VARCHAR},
			</if>
			<if test="nickName != null">
				#{nickName,jdbcType=VARCHAR},
			</if>
			<if test="email != null">
				#{email,jdbcType=VARCHAR},
			</if>
			<if test="mobile != null">
				#{mobile,jdbcType=VARCHAR},
			</if>
			<if test="password != null">
				#{password,jdbcType=VARCHAR},
			</if>
			<if test="headUri != null">
				#{headUri,jdbcType=VARCHAR},
			</if>
			<if test="createTime != null">
				#{createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="emailActive != null">
				#{emailActive,jdbcType=TINYINT},
			</if>
			<if test="mobileActive != null">
				#{mobileActive,jdbcType=TINYINT},
			</if>
			<if test="loginTime != null">
				#{loginTime,jdbcType=TIMESTAMP},
			</if>
			<if test="loginEquip != null">
				#{loginEquip,jdbcType=VARCHAR},
			</if>
			<if test="loginIp != null">
				#{loginIp,jdbcType=VARCHAR},
			</if>
			<if test="loginEquipId != null">
				#{loginEquipId,jdbcType=VARCHAR},
			</if>
			<if test="state != null">
				#{state,jdbcType=TINYINT},
			</if>
            <if test="userLevel != null">
                #{userLevel,jdbcType=TINYINT},
            </if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="com.meiliwan.emall.mms.bean.UserPassport">
		update user_passport
		<set>
			<if test="userName != null">
				user_name = #{userName,jdbcType=VARCHAR},
			</if>
			<if test="nickName != null">
				nick_name = #{nickName,jdbcType=VARCHAR},
			</if>
			<if test="email != null">
				email = #{email,jdbcType=VARCHAR},
			</if>
			<if test="mobile != null">
				mobile = #{mobile,jdbcType=VARCHAR},
			</if>
			<if test="password != null">
				password = #{password,jdbcType=VARCHAR},
			</if>
			<if test="headUri != null">
				head_uri = #{headUri,jdbcType=VARCHAR},
			</if>
			<if test="createTime != null">
				create_time = #{createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="emailActive != null">
				email_active = #{emailActive,jdbcType=TINYINT},
			</if>
			<if test="mobileActive != null">
				mobile_active = #{mobileActive,jdbcType=TINYINT},
			</if>
			<if test="loginTime != null">
				login_time = #{loginTime,jdbcType=TIMESTAMP},
			</if>
			<if test="loginEquip != null">
				login_equip = #{loginEquip,jdbcType=VARCHAR},
			</if>
			<if test="loginIp != null">
				login_ip = #{loginIp,jdbcType=VARCHAR},
			</if>
			<if test="loginEquipId != null">
				login_equip_id = #{loginEquipId,jdbcType=VARCHAR},
			</if>
			<if test="state != null">
				state = #{state,jdbcType=TINYINT},
			</if>
            <if test="userLevel != null">
                user_level = #{userLevel,jdbcType=TINYINT},
            </if>
		</set>
		where uid = #{uid,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.meiliwan.emall.mms.bean.UserPassport">
		update user_passport
		set user_name = #{userName,jdbcType=VARCHAR},
		nick_name = #{nickName,jdbcType=VARCHAR},
		email = #{email,jdbcType=VARCHAR},
		mobile = #{mobile,jdbcType=VARCHAR},
		password = #{password,jdbcType=VARCHAR},
		head_uri = #{headUri,jdbcType=VARCHAR},
		create_time = #{createTime,jdbcType=TIMESTAMP},
		email_active = #{emailActive,jdbcType=TINYINT},
		mobile_active = #{mobileActive,jdbcType=TINYINT},
		login_time = #{loginTime,jdbcType=TIMESTAMP},
		login_equip = #{loginEquip,jdbcType=VARCHAR},
		login_ip = #{loginIp,jdbcType=VARCHAR},
		login_equip_id = #{loginEquipId,jdbcType=VARCHAR},
		state = #{state,jdbcType=TINYINT},
		user_level = #{userLevel,jdbcType=TINYINT}
		where uid = #{uid,jdbcType=INTEGER}
	</update>


	<sql id="selectCondition">
		<where>
			<trim suffixOverrides="and">
				<if test="entity != null">
					<if test="entity.uid!=null and entity.id &gt;0">
						and uid=#{entity.uid,jdbcType=INTEGER}
					</if>
					<if test="entity.userName !=null and entity.userName !='' ">
						and user_name = #{entity.userName,jdbcType=VARCHAR}
					</if>
					<if test="entity.nickName !=null and entity.nickName !='' ">
						and nick_name = #{entity.nickName,jdbcType=VARCHAR}
					</if>
					<if test="entity.mobile !=null and entity.mobile !='' ">
						and mobile = #{entity.mobile,jdbcType=VARCHAR}
					</if>
					<if test="entity.email !=null and entity.email !='' ">
						and email = #{entity.email,jdbcType=VARCHAR}
					</if>
		
					<if test="entity.state !=null and entity.state !=0 ">
						and state = #{entity.state,jdbcType=TINYINT}
					</if>

                    <if test="entity.userLevel !=null ">
                        and user_level = #{entity.userLevel,jdbcType=TINYINT}
                    </if>
					
				</if>
			</trim>
			<trim suffixOverrides="and">
				<if test="createTimeBegin != null">
					and create_time &gt;= #{createTimeBegin,jdbcType=TIMESTAMP}
				</if>
				<if test="createTimeEnd != null">
					and create_time &lt;= #{createTimeEnd,jdbcType=TIMESTAMP}
				</if>
			</trim>
			<trim suffixOverrides="and">
				<if test="whereSql!=null">
					and ${whereSql}
				</if>
			</trim>
			
		</where>
	</sql>

	<!-- 根据条件查询 -->
	<select id="getListByEntityAndPageInfo" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from user_passport
		<include refid="selectCondition" />
		<if test="orderBy!=null">
			${orderBy}
		</if>
		<if test="pageInfo!=null">
			limit ${pageInfo.startIndex} ,${pageInfo.pagesize}
		</if>
	</select>

	<!-- 查询总数 -->
	<select id="getTotalByEntity" resultType="java.lang.Integer">
		select count(*) from user_passport
		<include refid="selectCondition" />
	</select>
	
	<update id="updateEmailActive" parameterType="com.meiliwan.emall.mms.bean.UserPassport">
		update user_passport set email_active = 1
		where uid = #{uid,jdbcType=INTEGER}
	</update>
	
	<update id="updateMobileActive" parameterType="com.meiliwan.emall.mms.bean.UserPassport">
		update user_passport set mobile_active = 1
		where uid = #{uid,jdbcType=INTEGER}
	</update>
	
	<select id="getListByMap" resultMap="BaseResultMap">
		select <include refid="Base_Column_List" />
		from user_passport
		<where>
			<trim suffixOverrides="and">
				<if test="entity != null">
				</if>
			</trim>
		</where>	
		<if test="orderBy!=null">
			${orderBy}
		</if>
	</select>
	
	<select id="getListByPara"  parameterType="com.meiliwan.emall.mms.bean.UserPassportPara"  resultMap="BaseResultMap">
		select <include refid="Base_Column_List" />
		from user_passport
		<where>
			<trim suffixOverrides="and">
				<if test="state != null and state !='' ">
					and state = #{state,jdbcType=TINYINT}
				</if>
				<if test="emailOrMobile != null and emailOrMobile !='' ">
					and (email=#{emailOrMobile,jdbcType=VARCHAR} or mobile=#{emailOrMobile,jdbcType=VARCHAR})
				</if>
				<if test="emailOrMobileOrUsername != null and emailOrMobileOrUsername !='' ">
					and (email=#{emailOrMobileOrUsername,jdbcType=VARCHAR} or mobile=#{emailOrMobileOrUsername,jdbcType=VARCHAR} or user_name=#{emailOrMobileOrUsername,jdbcType=VARCHAR})
				</if>
                <if test="uids != null and uids.length &gt; 0  ">
                    and uid in
                    <foreach collection="uids" index="index" item="item" open="(" separator="," close=")">
                        #{item,jdbcType=INTEGER}
                    </foreach>
                </if>
			</trim>
		</where>	
		<if test="orderBy!=null">
			${orderBy}
		</if>
		
	</select>
	
	
	<select id="getBeanByPara"  parameterType="com.meiliwan.emall.mms.bean.UserPassportPara"  resultMap="BaseResultMap">
		select <include refid="Base_Column_List" />
		from user_passport
        <where>
		<trim suffixOverrides="and">
			<if test="state != null  ">
				and state = #{state,jdbcType=TINYINT}
			</if>
			<if test="userName != null  ">
				and user_name = #{userName,jdbcType=VARCHAR}
			</if>
			<if test="nickName != null  ">
				and nick_name = #{nickName,jdbcType=VARCHAR}
			</if>
			<if test="email != null  ">
				and email = #{email,jdbcType=VARCHAR}
			</if>
			<if test="mobile != null  ">
				and mobile = #{mobile,jdbcType=VARCHAR}
			</if>
		</trim>
        </where>

	</select>



    <select id="getCountExcludeSelf"  parameterType="com.meiliwan.emall.mms.bean.UserPassport"  resultType="java.lang.Integer">
        select count(*) from user_passport
        <where>
            <trim suffixOverrides="and">
                and uid != #{uid,jdbcType=INTEGER}
                <if test="nickName != null and nickName !='' ">
                    and nick_name = #{nickName,jdbcType=VARCHAR}
                </if>
                <if test="email != null and email !='' ">
                    and email = #{email,jdbcType=VARCHAR}
                </if>
                <if test="mobile != null and mobile !='' ">
                    and mobile = #{mobile,jdbcType=VARCHAR}
                </if>
            </trim>
        </where>
    </select>

    <update id="updateSeqId" parameterType="java.lang.String">
       update user_seq set seq_id = #{value,jdbcType=VARCHAR}
    </update>

    <select id="getSeqId" resultType="java.lang.String">
        select seq_id from user_seq limit 0,1
    </select>

    <insert id="addSeqId" parameterType="java.lang.String">
        insert into user_seq(seq_id) values (#{value,jdbcType=VARCHAR})
    </insert>

    <select id="getSimpleListByPara" parameterType="com.meiliwan.emall.mms.bean.UserPassportPara"  resultMap="simpleResultMap" >
        select <include refid="Simple_Column_List" />
        from user_passport
        <where>
            <trim suffixOverrides="and">

                <if test="uids != null and uids.length &gt; 0  ">
                    and uid in
                    <foreach collection="uids" index="index" item="item" open="(" separator="," close=")">
                        #{item,jdbcType=INTEGER}
                    </foreach>
                </if>

            </trim>
        </where>
        <if test="orderBy!=null">
            ${orderBy}
        </if>
    </select>


</mapper>