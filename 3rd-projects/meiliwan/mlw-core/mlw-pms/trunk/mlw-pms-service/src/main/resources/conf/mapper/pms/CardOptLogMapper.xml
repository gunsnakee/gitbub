<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.meiliwan.emall.pms.dao.CardOptLogDao" >
  <resultMap id="BaseResultMap" type="com.meiliwan.emall.pms.bean.CardOptLog" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="card_id" property="cardId" jdbcType="VARCHAR" />
    <result column="batch_id" property="batchId" jdbcType="VARCHAR" />
    <result column="opt_type" property="optType" jdbcType="CHAR" />
    <result column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="user_name" property="userName" jdbcType="VARCHAR" />
    <result column="descp" property="descp" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, card_id, batch_id, opt_type, user_id, user_name, descp, create_time
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from card_opt_log
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from card_opt_log
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.meiliwan.emall.pms.bean.CardOptLog" >
    insert into card_opt_log (id, card_id, batch_id, 
      opt_type, user_id, user_name, 
      descp, create_time)
    values (#{id,jdbcType=INTEGER}, #{cardId,jdbcType=VARCHAR}, #{batchId,jdbcType=VARCHAR}, 
      #{optType,jdbcType=CHAR}, #{userId,jdbcType=INTEGER}, #{userName,jdbcType=VARCHAR}, 
      #{descp,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.meiliwan.emall.pms.bean.CardOptLog" >
    insert into card_opt_log
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="cardId != null" >
        card_id,
      </if>
      <if test="batchId != null" >
        batch_id,
      </if>
      <if test="optType != null" >
        opt_type,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="userName != null" >
        user_name,
      </if>
      <if test="descp != null" >
        descp,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="cardId != null" >
        #{cardId,jdbcType=VARCHAR},
      </if>
      <if test="batchId != null" >
        #{batchId,jdbcType=VARCHAR},
      </if>
      <if test="optType != null" >
        #{optType,jdbcType=CHAR},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="userName != null" >
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="descp != null" >
        #{descp,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.meiliwan.emall.pms.bean.CardOptLog" >
    update card_opt_log
    <set >
      <if test="cardId != null" >
        card_id = #{cardId,jdbcType=VARCHAR},
      </if>
      <if test="batchId != null" >
        batch_id = #{batchId,jdbcType=VARCHAR},
      </if>
      <if test="optType != null" >
        opt_type = #{optType,jdbcType=CHAR},
      </if>
      <if test="userId != null" >
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="userName != null" >
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="descp != null" >
        descp = #{descp,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.meiliwan.emall.pms.bean.CardOptLog" >
    update card_opt_log
    set card_id = #{cardId,jdbcType=VARCHAR},
      batch_id = #{batchId,jdbcType=VARCHAR},
      opt_type = #{optType,jdbcType=CHAR},
      user_id = #{userId,jdbcType=INTEGER},
      user_name = #{userName,jdbcType=VARCHAR},
      descp = #{descp,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>

    <!-- 下边是需要手动配置 自定义 查询条件 -->
    <sql id="selectCondition">
        <where>
            <trim suffixOverrides="and">
                <if test="entity != null">
                    <if test="entity.cardId!=null">
                        and card_id=#{entity.cardId,jdbcType=VARCHAR}
                    </if>
                    <if test="entity.batchId!=null">
                        and batch_id=#{entity.batchId,jdbcType=VARCHAR}
                    </if>
                </if>
            </trim>
            <trim suffixOverrides="and">
                <if test="whereSql!=null">
                    and ${whereSql}
                </if>
            </trim>
        </where>
    </sql>

    <!-- 根据条件查询 -->
    <select id="getListByEntityAndPageInfo" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from card_opt_log
        <include refid="selectCondition"/>
        <if test="orderBy!=null">
            ${orderBy}
        </if>
        <if test="pageInfo!=null">
            limit ${pageInfo.startIndex} ,${pageInfo.pagesize}
        </if>
    </select>

    <!-- 查询总数 -->
    <select id="getTotalByEntity"
            resultType="java.lang.Integer">
        select count(*) from card_opt_log
        <include refid="selectCondition"/>
    </select>

    <!-- 批量增加卡 -->
    <insert id="insertByBatch">
        insert into card_opt_log(card_id, opt_type, user_id,user_name, descp, create_time)
        values
        <foreach collection="list" item="item" index="index" separator="," >
            (#{item.cardId,jdbcType=VARCHAR}, #{item.optType,jdbcType=CHAR},#{item.userId,jdbcType=INTEGER},#{item.userName,jdbcType=VARCHAR},#{item.descp,jdbcType=VARCHAR},#{item.createTime})
        </foreach>
    </insert>

</mapper>